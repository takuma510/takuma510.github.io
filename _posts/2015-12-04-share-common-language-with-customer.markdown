---
layout: post
title:  "顧客と言語を共有する"
date:   2015-12-04 20:59:37
---

現在取り組んでいる受託開発案件で顧客への仕様の説明の際，積極的にシステムの概念モデルから演算できるよう意識した。

概念図を書き，このようなモデルで設計しているので，その帰結として仕様はこうなります。それ故，このようなケースではこのように動作します。といった具合である。個人的には全てのケースの動作を文章化し，それぞれ並び立てるより断然システムに関する正しい理解の仕方であると思っている。なぜなら全てのケースを文章化しても顧客はそんなもの読み込まないし，理解しずらいからだ。

そこでの概念図で用いる言葉はなるべくシステムコードで用いられている言葉の定義と合わせて記載した。顧客と言語を共有するためだ。

## 言語を共有するメリット

顧客と開発エンジニアの言語を統一すると様々なメリットがある。

- 顧客のシステムに関する理解が深くなる。
- 顧客と仕様についての議論がしやすい。
- 要件実現の為仕様変更によるメリット，デメリットがお互いにわかりやすくなる。

実際，追加要件の話をする際に，そのように意識して作った概念図を顧客が理解し，概念図の言葉を使って議論ができたことは収穫であった。

## 必要条件

当然ながらこのようなやり方が意味をもつようにするには顧客がシステムに対して積極的に関わらなくてはうまくいかない。これはコントローラブルではないのが悩ましい。

また，顧客に対する要件だけでなく，システムも当然ドメインモデルという概念を念頭に設計されていなくてはならない。そうでないと，話している内容と実装が矛盾を生じてしまい共通言語が全く意味をなさなくなってしまうからだ。

## おわりに

このような概念はEvans先生のDDD本で学んだ。この本では具体例と共に上記のような内容が記載されている。

<div style="margin-bottom:5px;"><a href="http://www.amazon.co.jp/381/dp/B00GRKD6XU%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3Dtakuma510-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3DB00GRKD6XU" target="_blank" title="エリック・エヴァンスのドメイン駆動設計"><img src="http://ecx.images-amazon.com/images/I/6181Uutb1tL._SL160_.jpg" width="119" height="150" alt="エリック・エヴァンスのドメイン駆動設計" style="border:0;border-radius:0" /></a></div><a href="http://www.amazon.co.jp/381/dp/B00GRKD6XU%3FSubscriptionId%3D0AVSM5SVKRWTFMG7ZR82%26tag%3Dtakuma510-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3DB00GRKD6XU" target="_blank">エリック・エヴァンスのドメイン駆動設計</a>
